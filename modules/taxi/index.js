const Telegraf = require('telegraf')
const date = require('../date/index.js');
const utility = require('../utility/index.js');
const user = require('../users/index.js');
const Settings = require('../settings.json')
const YandexGeocoder = require('nodejs-yandex-geocoder')
const request = require('request');

function sleep(ms) {
  return new Promise(resolve => {
    setTimeout(resolve, ms)
  })
}

function getAddressByCoordinates (coordinates) {
  return new Promise(function (resolve, reject) {
    request(`https://geocode-maps.yandex.ru/1.x/?apikey=e84ddeff-cc15-48bb-9929-b9fbdb3dd78a&geocode=${coordinates}&kind=house&format=json&results=1`, function (error, res, body) {
      if (!error && res.statusCode == 200) {
        var json = JSON.parse(body);
        try {
          resolve(json.response.GeoObjectCollection.featureMember[0].GeoObject.name);
        }
        catch (err) {
          console.log(body);
          console.log(err);
          resolve('undefined');
        }
      } else {
        reject(error);
      }
    });
  });
}

const menuCallACabDutyActions = Telegraf.Extra
  .HTML()
  .markup((m) => m.inlineKeyboard([
    m.urlButton('üöï –í—ã–∑–≤–∞—Ç—å —Ç–∞–∫—Å–∏', 'https://business.taxi.yandex.ru/order'),
    m.urlButton('‚úèÔ∏è –í–Ω–µ—Å—Ç–∏ –≤ —Å–ø–∏—Å–æ–∫', 'https://wiki.yandex-team.ru/eva/drive/tosenior/howto/taxi/'),
    m.callbackButton('‚úÖ –û—Ç–º–µ—Ç–∏—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–º', 'actionMatchAsDoneTaxi'),
  ], {
    columns: 2
  }))

const menuActionsWithTaxiOrder = Telegraf.Extra
  .HTML()
  .markup((m) => m.inlineKeyboard([
    m.callbackButton('–í–∑—è—Ç—å –≤ —Ä–∞–±–æ—Ç—É', 'actionSetDutyTaxi')
  ]))

const menuCallACab = Telegraf.Extra
  .HTML()
  .markup((m) => m.inlineKeyboard([
    m.callbackButton('üöï –ó–∞–∫–∞–∑–∞—Ç—å —Ç–∞–∫—Å–∏', 'actionCallACab')
  ]))

const menuCallACabMoscowPopularPlacesFrom = Telegraf.Extra
  .HTML()
  .markup((m) => m.inlineKeyboard([
    m.callbackButton('–¶–≤–µ—Ç–æ—á–Ω—ã–π –ø—Ä–æ–µ–∑–¥, 13', 'actionCallACabEnteredFromTsvetochniy'),
    m.callbackButton('—É–ª–∏—Ü–∞ –î–µ–∫–∞–±—Ä–∏—Å—Ç–æ–≤, –≤–ª47–∞', 'actionCallACabEnteredFromDecabristov'),
    m.callbackButton('Major Volvo –ú–ö–ê–î 47 –∫–º', 'actionCallACabEnteredFrom47'),
    m.callbackButton('–ù–æ–≤–∞—è –†–∏–≥–∞, BMW —Ü–µ–Ω—Ç—Ä', 'actionCallACabEnteredFromNovayaRiga'),
    m.callbackButton('Mercedes-Benz –ú–ö–ê–î 92 –∫–º', 'actionCallACabEnteredFrom92'),
    m.callbackButton('Audi, –ú–ö–ê–î 18 –∫–º', 'actionCallACabEnteredFrom18')
  ], {
    columns: 1
  }))


function getCabMessage (ctx, orderNumber) {
  var userID = user.getIDByTelegramUsername(ctx, ctx.taxi.orders[orderNumber].telegramUsername)
  var message = '–ó–∞—è–≤–∫–∞ ‚Ññ' + orderNumber + ' –æ—Ç @' + ctx.taxi.orders[orderNumber].telegramUsername + '!\n' +
    '\n' +
    '<b>–û—Ç:</b> ' + ctx.taxi.orders[orderNumber].from + '\n' +
    '<b>–î–æ:</b> ' + ctx.taxi.orders[orderNumber].to + '\n' +
    '<b>–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:</b> ' + ctx.users.all[userID].info.phone + '\n' +
    '<b>–§–ò–û:</b> ' + ctx.users.all[userID].info.name + '\n' +
    '\n' +
    '<b>–¢–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å:</b> ' + ctx.taxi.orders[orderNumber].status;
  return message;
}

module.exports = {
  enterAddressFrom: function (ctx) {
    if (typeof ctx.session.taxi === 'undefined') {
      if (typeof ctx.update.callback_query === 'undefined') {
        ctx.session.taxi = {
          telegramUsername: ctx.message.from.username,
        }
        if (user.hasRoleByTelegramID(ctx, 'technicianMoscow', ctx.message.from.id)) {
          return ctx.replyWithHTML('–ü—Ä–∏—à–ª–∏ –∞–¥—Ä–µ—Å, <b>–æ—Ç–∫—É–¥–∞</b> –Ω—É–∂–Ω–æ —Ç–µ–±—è –∑–∞–±—Ä–∞—Ç—å.\n\n<i>–í–º–µ—Å—Ç–æ —Ç–µ–∫—Å—Ç–∞ –º–æ–∂–Ω–æ –ø—Ä–∏—Å–ª–∞—Ç—å –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é —á–µ—Ä–µ–∑ –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª Telegram. –ï—Å–ª–∏ –Ω—É–∂–Ω–æ –æ—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑, –Ω–∞–ø–∏—à–∏ —Å–ª–æ–≤–æ "–æ—Ç–º–µ–Ω–∞"</i>', menuCallACabMoscowPopularPlacesFrom).then((nctx) => {
            ctx.session.taxi.messageIDTo = nctx.message_id;
          })
        } else {
          return ctx.replyWithHTML('–ü—Ä–∏—à–ª–∏ –∞–¥—Ä–µ—Å, <b>–æ—Ç–∫—É–¥–∞</b> –Ω—É–∂–Ω–æ —Ç–µ–±—è –∑–∞–±—Ä–∞—Ç—å.\n\n<i>–í–º–µ—Å—Ç–æ —Ç–µ–∫—Å—Ç–∞ –º–æ–∂–Ω–æ –ø—Ä–∏—Å–ª–∞—Ç—å –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é —á–µ—Ä–µ–∑ –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª Telegram. –ï—Å–ª–∏ –Ω—É–∂–Ω–æ –æ—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑, –Ω–∞–ø–∏—à–∏ —Å–ª–æ–≤–æ "–æ—Ç–º–µ–Ω–∞"</i>').then((nctx) => {
            ctx.session.taxi.messageIDTo = nctx.message_id;
          })
        }
      } else {
        ctx.session.taxi = {
          telegramUsername: ctx.update.callback_query.from.username
        }
        if (user.hasRoleByTelegramID(ctx, 'technicianMoscow',  ctx.update.callback_query.from.id)) {
          return ctx.replyWithHTML('–ü—Ä–∏—à–ª–∏ –∞–¥—Ä–µ—Å, <b>–æ—Ç–∫—É–¥–∞</b> –Ω—É–∂–Ω–æ —Ç–µ–±—è –∑–∞–±—Ä–∞—Ç—å.\n\n<i>–í–º–µ—Å—Ç–æ —Ç–µ–∫—Å—Ç–∞ –º–æ–∂–Ω–æ –ø—Ä–∏—Å–ª–∞—Ç—å –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é —á–µ—Ä–µ–∑ –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª Telegram. –ï—Å–ª–∏ –Ω—É–∂–Ω–æ –æ—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑, –Ω–∞–ø–∏—à–∏ —Å–ª–æ–≤–æ "–æ—Ç–º–µ–Ω–∞"</i>', menuCallACabMoscowPopularPlacesFrom).then((nctx) => {
            ctx.session.taxi.messageIDTo = nctx.message_id;
          })
        } else {
          return ctx.replyWithHTML('–ü—Ä–∏—à–ª–∏ –∞–¥—Ä–µ—Å, <b>–æ—Ç–∫—É–¥–∞</b> –Ω—É–∂–Ω–æ —Ç–µ–±—è –∑–∞–±—Ä–∞—Ç—å.\n\n<i>–í–º–µ—Å—Ç–æ —Ç–µ–∫—Å—Ç–∞ –º–æ–∂–Ω–æ –ø—Ä–∏—Å–ª–∞—Ç—å –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é —á–µ—Ä–µ–∑ –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª Telegram. –ï—Å–ª–∏ –Ω—É–∂–Ω–æ –æ—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑, –Ω–∞–ø–∏—à–∏ —Å–ª–æ–≤–æ "–æ—Ç–º–µ–Ω–∞"</i>').then((nctx) => {
            ctx.session.taxi.messageIDTo = nctx.message_id;
          })
        }
      }
    } else {
      if (typeof ctx.session.taxi.from === 'undefined') {
        ctx.replyWithHTML('–¢—ã —É–∂–µ –∏ —Ç–∞–∫ –≤—ã–∑—ã–≤–∞–µ—à—å —Ç–∞–∫—Å–∏, –∂–¥—É –æ—Ç —Ç–µ–±—è –∞–¥—Ä–µ—Å <b>–æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—è</b>')
      } else {
        if (typeof ctx.session.taxi.to === 'undefined') {
          ctx.replyWithHTML('–¢—ã —É–∂–µ –∏ —Ç–∞–∫ –≤—ã–∑—ã–≤–∞–µ—à—å —Ç–∞–∫—Å–∏, –∂–¥—É –∞–¥—Ä–µ—Å <b>–ø—Ä–∏–±—ã—Ç–∏—è</b>')
        }
      }
    }
  },


  enterAddressFavourite: function (ctx) {
    var fromInAction = ctx.callbackQuery.data.split('actionCallACabEnteredFrom')[1];
    var from = '';
    switch (fromInAction) {
      case 'Tsvetochniy':
        from = '–¶–≤–µ—Ç–æ—á–Ω—ã–π –ø—Ä–æ–µ–∑–¥, 13';
        break;
      case 'Decabristov':
        from = '—É–ª–∏—Ü–∞ –î–µ–∫–∞–±—Ä–∏—Å—Ç–æ–≤, –≤–ª47–∞';
        break;
      case '47':
        from = 'Major Volvo –ú–ö–ê–î 47 –∫–º';
        break;
      case 'NovayaRiga':
        from = '–ù–æ–≤–æ—Ä–∏–∂—Å–∫–æ–µ —à–æ—Å—Å–µ, 25-–π –∫–∏–ª–æ–º–µ—Ç—Ä, 22';
        break;
      case '92':
        from = '–ú–µ—Ä—Å–µ–¥–µ—Å-–ë–µ–Ω—Ü –ê–≤—Ç–æ—Ñ–æ—Ä—É–º';
        break;
      case '18':
        from = '–§–ò–û';
        break;
    }
    ctx.session.taxi.from = from;
    ctx.deleteMessage();
    return ctx.replyWithHTML('–£—Å–ø–µ—à–Ω–æ –≤—ã–±—Ä–∞–Ω <b>' + from + '</b>! \n\n–ü—Ä–∏—à–ª–∏ –∞–¥—Ä–µ—Å, <b>–∫—É–¥–∞</b> –Ω—É–∂–Ω–æ –¥–æ–µ—Ö–∞—Ç—å.\n\n<i>–í–º–µ—Å—Ç–æ —Ç–µ–∫—Å—Ç–∞ –º–æ–∂–Ω–æ –ø—Ä–∏—Å–ª–∞—Ç—å –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é —á–µ—Ä–µ–∑ –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª Telegram. –ï—Å–ª–∏ –Ω—É–∂–Ω–æ –æ—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑, –Ω–∞–ø–∏—à–∏ —Å–ª–æ–≤–æ "–æ—Ç–º–µ–Ω–∞"</i>').then((nctx) => {
      ctx.session.taxi.messageIDFrom = nctx.message_id;
    });
  },


  writeInfoTaxi: async function (ctx) {
    try {
      if (typeof ctx.session.taxi === 'undefined') {return;}
      if (typeof ctx.session.taxi.from === 'undefined') {
        ctx.telegram.deleteMessage(ctx.message.from.id, ctx.session.taxi.messageIDTo);
        if (ctx.message.location) {
          var longitude = ctx.message.location.longitude;
          var latitude = ctx.message.location.latitude;
          var coordinates = `${longitude},${latitude}`;
          ctx.replyWithHTML('–ú–∏–Ω—É—Ç–æ—á–∫—É, –∏—â—É –∞–¥—Ä–µ—Å...')

          var address = await getAddressByCoordinates(coordinates);

          if (typeof address !== 'undefined') {
            ctx.session.taxi.from = `${address}`;
            return ctx.replyWithHTML(`<b>–ó–∞–ø–∏—Å–∞–ª –∞–¥—Ä–µ—Å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—è:</b> ${address}\n\n–ü—Ä–∏—à–ª–∏ –∞–¥—Ä–µ—Å, <b>–∫—É–¥–∞</b> –Ω—É–∂–Ω–æ –¥–æ–µ—Ö–∞—Ç—å.\n<i>–í–º–µ—Å—Ç–æ —Ç–µ–∫—Å—Ç–∞ –º–æ–∂–Ω–æ –ø—Ä–∏—Å–ª–∞—Ç—å –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é —á–µ—Ä–µ–∑ –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª Telegram. –ï—Å–ª–∏ –Ω—É–∂–Ω–æ –æ—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑, –Ω–∞–ø–∏—à–∏ —Å–ª–æ–≤–æ "–æ—Ç–º–µ–Ω–∞"</i>\n\n`).then((nctx) => {
              ctx.session.taxi.messageIDFrom = nctx.message_id;
            });
            return;
          } else {
            ctx.telegram.sendMessage(Settings.chats.test.id, `–£ @${ctx.session.taxi.telegramUsername} –æ—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –æ—Ç –ì–µ–æ–∫–æ–¥–µ—Ä–∞ –Ω–∞ —ç—Ç–∞–ø–µ –æ—Ç—Ä–∞–≤–ª–µ–Ω–∏—è –æ—Ç–∫—É–¥–∞, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–ø—Ä–∞–≤–ª—è–ª –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é. –ê–¥—Ä–µ—Å –Ω–µ–∏–∑–≤–µ—Å—Ç–µ–Ω.`);
            ctx.replyWithHTML('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö. –î–∞–≤–∞–π –ø–æ–ø—Ä–æ–±—É–µ–º –µ—â—ë —Ä–∞–∑ üôÉ', menuCallACab);
            return;
          }

        } else {
          // If it is not location, but coordinates
          if (ctx.message.text.search(/([0-9][0-9])\.([0-9]+)\,([0-9][0-9])\.([0-9]+)/gi) > -1) {
            // Actually we need to swap coordinates in message, so let's do it
            // TODO: change to .split()
            var longitude = ctx.message.text.split(',')[1];
            var latitude = ctx.message.text.split(',')[0];
            ctx.replyWithHTML('–ú–∏–Ω—É—Ç–æ—á–∫—É, –∏—â—É –∞–¥—Ä–µ—Å...')
            var coordinates = `${longtitude},${latitude}`;

            var address = await getAddressByCoordinates(coordinates);

            if (typeof address !== 'undefined') {
              ctx.session.taxi.from = `${ctx.message.text} (${address})`;
              return ctx.replyWithHTML(`<b>–ó–∞–ø–∏—Å–∞–ª –∞–¥—Ä–µ—Å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—è:</b> ${address}\n\n–ü—Ä–∏—à–ª–∏ –∞–¥—Ä–µ—Å, <b>–∫—É–¥–∞</b> –Ω—É–∂–Ω–æ –¥–æ–µ—Ö–∞—Ç—å.\n<i>–í–º–µ—Å—Ç–æ —Ç–µ–∫—Å—Ç–∞ –º–æ–∂–Ω–æ –ø—Ä–∏—Å–ª–∞—Ç—å –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é —á–µ—Ä–µ–∑ –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª Telegram. –ï—Å–ª–∏ –Ω—É–∂–Ω–æ –æ—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑, –Ω–∞–ø–∏—à–∏ —Å–ª–æ–≤–æ "–æ—Ç–º–µ–Ω–∞"</i>\n\n`).then((nctx) => {
                ctx.session.taxi.messageIDFrom = nctx.message_id;
              });
            } else {
              ctx.telegram.sendMessage(Settings.chats.test.id, `–£ @${ctx.session.taxi.telegramUsername} –æ—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –æ—Ç –ì–µ–æ–∫–æ–¥–µ—Ä–∞ –Ω–∞ —ç—Ç–∞–ø–µ –æ—Ç—Ä–∞–≤–ª–µ–Ω–∏—è –æ—Ç–∫—É–¥–∞, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–ø—Ä–∞–≤–ª—è–ª –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã. –ê–¥—Ä–µ—Å –Ω–µ–∏–∑–≤–µ—Å—Ç–µ–Ω.`);
              ctx.replyWithHTML('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö. –î–∞–≤–∞–π –ø–æ–ø—Ä–æ–±—É–µ–º –µ—â—ë —Ä–∞–∑ üôÉ', menuCallACab);
              return;
            }

          } else {
            ctx.session.taxi.from = ctx.message.text;
            return ctx.replyWithHTML(`<b>–ó–∞–ø–∏—Å–∞–ª –∞–¥—Ä–µ—Å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—è:</b> ${ctx.message.text}\n\n–ü—Ä–∏—à–ª–∏ –∞–¥—Ä–µ—Å, <b>–∫—É–¥–∞</b> –Ω—É–∂–Ω–æ –¥–æ–µ—Ö–∞—Ç—å.\n<i>–í–º–µ—Å—Ç–æ —Ç–µ–∫—Å—Ç–∞ –º–æ–∂–Ω–æ –ø—Ä–∏—Å–ª–∞—Ç—å –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é —á–µ—Ä–µ–∑ –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª Telegram. –ï—Å–ª–∏ –Ω—É–∂–Ω–æ –æ—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑, –Ω–∞–ø–∏—à–∏ —Å–ª–æ–≤–æ "–æ—Ç–º–µ–Ω–∞"</i>\n\n`).then((nctx) => {
              ctx.session.taxi.messageIDFrom = nctx.message_id;
            });
          }
        }
      }
      else {
        if (typeof ctx.session.taxi.to === 'undefined') {
          ctx.telegram.deleteMessage(ctx.message.from.id, ctx.session.taxi.messageIDFrom);
          if (ctx.message.location) {
            var longitude = ctx.message.location.longitude;
            var latitude = ctx.message.location.latitude;
            var coordinates = `${longitude},${latitude}`;
            ctx.replyWithHTML('–ú–∏–Ω—É—Ç–æ—á–∫—É, –∏—â—É –∞–¥—Ä–µ—Å...')

            var address = await getAddressByCoordinates(coordinates);

            if (typeof address !== 'undefined') {
              ctx.session.taxi.to = `${address}`;
            } else {
              ctx.telegram.sendMessage(Settings.chats.test.id, `–£ @${ctx.session.taxi.telegramUsername} –æ—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –æ—Ç –ì–µ–æ–∫–æ–¥–µ—Ä–∞ –Ω–∞ —ç—Ç–∞–ø–µ –æ—Ç—Ä–∞–≤–ª–µ–Ω–∏—è –∫—É–¥–∞, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–ø—Ä–∞–≤–ª—è–ª –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é. –ê–¥—Ä–µ—Å –Ω–µ–∏–∑–≤–µ—Å—Ç–µ–Ω.`);
              ctx.replyWithHTML('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö. –î–∞–≤–∞–π –ø–æ–ø—Ä–æ–±—É–µ–º –µ—â—ë —Ä–∞–∑ üôÉ', menuCallACab);
            }
          } else {
            if (ctx.message.text.search(/([0-9][0-9])\.([0-9]+)\,([0-9][0-9])\.([0-9]+)/gi) > -1) {
              ctx.replyWithHTML('–ú–∏–Ω—É—Ç–æ—á–∫—É, –∏—â—É –∞–¥—Ä–µ—Å...')
              //TODO: change to .split()
              var longitude = ctx.message.text.split(',')[1];
              var latitude = ctx.message.text.split(',')[0];
              var coordinates = `${longitude},${latitude}`;

              var address = await getAddressByCoordinates(coordinates);

              if (typeof address !== 'undefined') {
                ctx.session.taxi.to = `${ctx.message.text} (${address})`;
              } else {
                ctx.telegram.sendMessage(Settings.chats.test.id, `–£ @${ctx.session.taxi.telegramUsername} –æ—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –æ—Ç –ì–µ–æ–∫–æ–¥–µ—Ä–∞ –Ω–∞ —ç—Ç–∞–ø–µ –æ—Ç—Ä–∞–≤–ª–µ–Ω–∏—è –∫—É–¥–∞, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–ø—Ä–∞–≤–ª—è–ª –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã. –ê–¥—Ä–µ—Å –Ω–µ–∏–∑–≤–µ—Å—Ç–µ–Ω.`);
                ctx.replyWithHTML('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö. –î–∞–≤–∞–π –ø–æ–ø—Ä–æ–±—É–µ–º –µ—â—ë —Ä–∞–∑ üôÉ', menuCallACab);
                return;
              }
            } else {
              ctx.session.taxi.to = ctx.message.text;
            }
          }
          ctx.session.taxi.timestamp = ctx.message.date;
          ctx.session.taxi.status = '–û–∂–∏–¥–∞–Ω–∏–µ –¥–µ–∂—É—Ä–Ω–æ–≥–æ';

          var userID = -1;
          userID = user.getIDByTelegramUsername(ctx, ctx.session.taxi.telegramUsername);
          if (userID > -1) {
            ctx.session.taxi.telegramID = ctx.users.all[userID].info.telegramID;
            ctx.session.taxi.chat = {};
            if (user.hasRoleByTelegramUsername(ctx, 'technicianSaintPetersburg', ctx.session.taxi.telegramUsername)) ctx.session.taxi.chat.id = Settings.chats.spbTechicians.id;
            else if (user.hasRoleByTelegramUsername(ctx, 'technicianKazan', ctx.session.taxi.telegramUsername)) ctx.session.taxi.chat.id = Settings.chats.kazanTechnicians.id;
            else ctx.session.taxi.chat.id = Settings.chats.moscowTechicians.id;
          } else {
            ctx.telegram.sendMessage(Settings.chats.test.id, '@' + ctx.taxi.orders[orderNumber].telegramUsername + ' –¥–æ—à—ë–ª –¥–æ –∫–æ–Ω—Ü–∞ –∑–∞–∫–∞–∑–∞ —Ç–∞–∫—Å–∏, –Ω–æ –Ω–µ —Å–º–æ–≥ –Ω–∞–π—Ç–∏ –µ–≥–æ ID –≤ –±–∞–∑–µ.');
            return;
          }

          var orderNumber = ctx.taxi.orders.length;

          const menuCabCancelTheOrder = Telegraf.Extra
            .HTML()
            .markup((m) => m.inlineKeyboard([
              m.callbackButton('‚ùå –û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑ ‚ùå', `actionCabCancelTheOrder_${orderNumber}`)
            ]))

          ctx.taxi.orders.push(ctx.session.taxi);
          ctx.session.taxi = undefined;
          var messageID;
          return ctx.replyWithHTML('–¢–≤–æ—è –∑–∞—è–≤–∫–∞ –ø—Ä–∏–Ω—è—Ç–∞! –ù–æ–º–µ—Ä ' + orderNumber + '\n' +
            '\n' +
            '<b>–û—Ç:</b> ' + ctx.taxi.orders[orderNumber].from + '\n' +
            '<b>–î–æ:</b> ' + ctx.taxi.orders[orderNumber].to + '\n' +
            '\n' +
            '–ö–æ–≥–¥–∞ –∑–∞–∫–∞–∑ –Ω–∞ —Ç–∞–∫—Å–∏ –±—É–¥–µ—Ç —Ä–∞–∑–º–µ—â—ë–Ω, —Ç–µ–±–µ –ø—Ä–∏–¥—ë—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ —ç—Ç–æ—Ç —á–∞—Ç, –∞ —Ç–∞–∫–∂–µ –°–ú–°-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –Ω–∞ —Ç–µ–ª–µ—Ñ–æ–Ω.', menuCabCancelTheOrder).then((nctx) => {
                ctx.taxi.orders[orderNumber].messageID = nctx.message_id;
                return ctx.telegram.sendMessage(ctx.taxi.orders[orderNumber].chat.id, getCabMessage(ctx, orderNumber), menuActionsWithTaxiOrder).then((m) => {
                  ctx.taxi.orders[orderNumber].chat.messageID = m.message_id;
                });
            })
        }
      }
    }
    catch (err) {
      console.log(err);
      ctx.reply('–° –∑–∞–∫–∞–∑–æ–º, –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω–æ, –ø–æ—à–ª–æ —á—Ç–æ-—Ç–æ –Ω–µ —Ç–∞–∫, –ø–æ—ç—Ç–æ–º—É —Ç—ã –ø–æ–∫–∞ —á—Ç–æ –Ω–µ —Å–º–æ–∂–µ—à—å –∑–∞–∫–∞–∑–∞—Ç—å —Ç–∞–∫—Å–∏ —á–µ—Ä–µ–∑ –±–æ—Ç–∞. –ó–∞–∫–∞–∂–∏ —á–µ—Ä–µ–∑ –¥–µ–∂—É—Ä–Ω—ã—Ö –ø—Ä–æ—Å—Ç–æ —Å–ª–æ–≤–∞–º–∏ –∏ –Ω–∞–ø–∏—à–∏ @example_login, —á—Ç–æ —É —Ç–µ–±—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–∫–∞–∑–µ —Ç–∞–∫—Å–∏. –ü—ã—Ç–∞—Ç—å—Å—è –µ—â—ë —Ä–∞–∑ –≤—ã–∑–≤–∞—Ç—å —Å–º—ã—Å–ª–∞ –Ω–µ—Ç, —Å–∫–æ—Ä–µ–µ –≤—Å–µ–≥–æ –æ—à–∏–±–∫–∞ —Ç–∞–∫ –∏ –±—É–¥–µ—Ç –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å—Å—è');
    }
  },


  setDuty: function (ctx) {
    var text = ctx.update.callback_query.message.text;
    var startIndex = 8;
    var endIndex = text.indexOf(' –æ—Ç @');
    var orderNumber = text.substring(startIndex, endIndex);

    ctx.taxi.orders[orderNumber].ordered = {};
    ctx.taxi.orders[orderNumber].ordered.telegramUsername = ctx.from.username;
    ctx.taxi.orders[orderNumber].ordered.telegramID = ctx.from.id;
    ctx.taxi.orders[orderNumber].status = '–î–µ–∂—É—Ä–Ω—ã–π –≤—ã–∑—ã–≤–∞–µ—Ç —Ç–∞–∫—Å–∏';

    var message = getCabMessage(ctx, orderNumber);
    ctx.editMessageText(message + '\n<i>–í—ã–∑—ã–≤–∞–µ—Ç</i> @' + ctx.from.username, Telegraf.Extra.HTML())

    return ctx.telegram.sendMessage(ctx.from.id, message, menuCallACabDutyActions).then((m) => {
      ctx.taxi.orders[orderNumber].ordered.messageID = m.message_id;
    })
  },


  completeTheOrder: function (ctx) {
    var text = ctx.update.callback_query.message.text;

    var startIndex = 8;
    var endIndex = text.indexOf(' –æ—Ç @');
    var orderNumber = text.substring(startIndex, endIndex);

    ctx.taxi.orders[orderNumber].ordered.timestamp = date.getCurrent().string.DDMMhhmm;
    ctx.taxi.orders[orderNumber].status = '–¢–∞–∫—Å–∏ –∑–∞–∫–∞–∑–∞–Ω–æ';
    ctx.telegram.sendMessage(ctx.taxi.orders[orderNumber].telegramID, `–ó–∞–∫–∞–∑ <b>‚Ññ${orderNumber}</b> —É—Å–ø–µ—à–Ω–æ —Ä–∞–∑–º–µ—â—ë–Ω. –ü–æ–¥—Ä–æ–±–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –±—É–¥–µ—Ç –≤ –°–ú–°-—Å–æ–æ–±—â–µ–Ω–∏–∏.\n\n<i>–ß—Ç–æ–±—ã –∑–∞–∫–∞–∑–∞—Ç—å –Ω–æ–≤–æ–µ —Ç–∞–∫—Å–∏, –∏—Å–ø–æ–ª—å–∑—É–π –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ –∏–ª–∏ –∫–æ–º–∞–Ω–¥—É /taxi</i>`, menuCallACab)

    var message = getCabMessage(ctx, orderNumber) + '\n<i>–í—ã–∑–≤–∞–ª</i> @' + ctx.taxi.orders[orderNumber].ordered.telegramUsername;

    ctx.telegram.editMessageText(ctx.taxi.orders[orderNumber].chat.id, ctx.taxi.orders[orderNumber].chat.messageID, undefined, message, Telegraf.Extra.HTML());

    //ctx.telegram.editMessageText(ctx.taxi.orders[orderNumber].ordered.telegramID, ctx.taxi.orders[orderNumber].ordered.messageID, undefined, message, Telegraf.Extra.HTML());

    // Remove the menu from the message
    message = '–¢–≤–æ—è –∑–∞—è–≤–∫–∞ –ø—Ä–∏–Ω—è—Ç–∞! –ù–æ–º–µ—Ä ' + orderNumber + '\n' +
      '\n' +
      '<b>–û—Ç:</b> ' + ctx.taxi.orders[orderNumber].from + '\n' +
      '<b>–î–æ:</b> ' + ctx.taxi.orders[orderNumber].to + '\n' +
      '–ö–æ–≥–¥–∞ –∑–∞–∫–∞–∑ –Ω–∞ —Ç–∞–∫—Å–∏ –±—É–¥–µ—Ç —Ä–∞–∑–º–µ—â—ë–Ω, —Ç–µ–±–µ –ø—Ä–∏–¥—ë—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ —ç—Ç–æ—Ç —á–∞—Ç, –∞ —Ç–∞–∫–∂–µ –°–ú–°-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –Ω–∞ —Ç–µ–ª–µ—Ñ–æ–Ω.';

    ctx.telegram.editMessageText(ctx.taxi.orders[orderNumber].telegramID, ctx.taxi.orders[orderNumber].messageID, undefined, message, Telegraf.Extra.HTML());

    utility.hideMenu(ctx);
  },


  cancelCabOrder: function (ctx) {
    var orderNumber = ctx.callbackQuery.data.split('_')[1];

    ctx.taxi.orders[orderNumber].status = '–¢–∞–∫—Å–∏ –æ—Ç–º–µ–Ω–µ–Ω–æ —Ç–µ—Ö–Ω–∏–∫–æ–º';
    var message = getCabMessage(ctx, orderNumber) + '\n<i>–û—Ç–º–µ–Ω–µ–Ω–æ —Ç–µ—Ö–Ω–∏–∫–æ–º</i>';

    if (typeof ctx.taxi.orders[orderNumber].ordered === 'undefined') {
      ctx.telegram.sendMessage(ctx.taxi.orders[orderNumber].chat.id, `@${ctx.taxi.orders[orderNumber].telegramUsername} –æ—Ç–º–µ–Ω–∏–ª –≤—ã–∑–æ–≤ —Ç–∞–∫—Å–∏`)
      ctx.telegram.editMessageText(ctx.taxi.orders[orderNumber].chat.id, ctx.taxi.orders[orderNumber].chat.messageID, undefined, message, Telegraf.Extra.HTML());
    } else {
      ctx.telegram.sendMessage(ctx.taxi.orders[orderNumber].chat.id, `@${ctx.taxi.orders[orderNumber].telegramUsername}, @${ctx.taxi.orders[orderNumber].telegramUsername} –æ—Ç–º–µ–Ω–∏–ª –≤—ã–∑–æ–≤ —Ç–∞–∫—Å–∏`)
      ctx.telegram.editMessageText(ctx.taxi.orders[orderNumber].chat.id, ctx.taxi.orders[orderNumber].chat.messageID, undefined, message, Telegraf.Extra.HTML());
      ctx.telegram.editMessageText(ctx.taxi.orders[orderNumber].ordered.telegramID, ctx.taxi.orders[orderNumber].ordered.messageID, undefined, message, Telegraf.Extra.HTML());
    }
    ctx.telegram.sendMessage(ctx.taxi.orders[orderNumber].telegramID, `–ó–∞–∫–∞–∑ <b>‚Ññ${orderNumber}</b> —É—Å–ø–µ—à–Ω–æ –æ—Ç–º–µ–Ω—ë–Ω\n\n<i>–ß—Ç–æ–±—ã –∑–∞–∫–∞–∑–∞—Ç—å –Ω–æ–≤–æ–µ —Ç–∞–∫—Å–∏, –∏—Å–ø–æ–ª—å–∑—É–π –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ –∏–ª–∏ –∫–æ–º–∞–Ω–¥—É /taxi</i>`, menuCallACab)

    // Remove the menu from the message
    message = '–¢–≤–æ—è –∑–∞—è–≤–∫–∞ –ø—Ä–∏–Ω—è—Ç–∞! –ù–æ–º–µ—Ä ' + orderNumber + '\n' +
      '\n' +
      '<b>–û—Ç:</b> ' + ctx.taxi.orders[orderNumber].from + '\n' +
      '<b>–î–æ:</b> ' + ctx.taxi.orders[orderNumber].to + '\n' +
      '–ö–æ–≥–¥–∞ –∑–∞–∫–∞–∑ –Ω–∞ —Ç–∞–∫—Å–∏ –±—É–¥–µ—Ç —Ä–∞–∑–º–µ—â—ë–Ω, —Ç–µ–±–µ –ø—Ä–∏–¥—ë—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ —ç—Ç–æ—Ç —á–∞—Ç, –∞ —Ç–∞–∫–∂–µ –°–ú–°-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –Ω–∞ —Ç–µ–ª–µ—Ñ–æ–Ω.';

    utility.hideMenu(ctx);
  },

  cancelCab: function (ctx) {
    ctx.session = undefined;
    ctx.replyWithHTML('–ó–∞–∫–∞–∑ —É—Å–ø–µ—à–Ω–æ –æ—Ç–º–µ–Ω—ë–Ω\n\n<i>–ß—Ç–æ–±—ã –∑–∞–∫–∞–∑–∞—Ç—å –Ω–æ–≤–æ–µ —Ç–∞–∫—Å–∏, –∏—Å–ø–æ–ª—å–∑—É–π –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ –∏–ª–∏ –∫–æ–º–∞–Ω–¥—É /taxi</i>', menuCallACab)
  }
}
